package com.dbsl.proposalgenerator.beans;

// Generated Oct 2, 2015 12:51:43 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StaticText generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "static_text", catalog = "dbsl_proposal_generator")
public class StaticText implements java.io.Serializable {

	private Long id;
	private String heading;
	private String filePath;
	private Date createdOn;
	private Date updatedOn;
	private Boolean isActive;
	private Set<Model> models = new HashSet<Model>(0);
	private Set<ExecutiveSummery> executiveSummeries = new HashSet<ExecutiveSummery>(
			0);
	private Set<Category> categories = new HashSet<Category>(0);
	private Set<Hardware> hardwares = new HashSet<Hardware>(0);

	public StaticText() {
	}

	public StaticText(String heading, String filePath, Date createdOn,
			Date updatedOn, Boolean isActive, Set<Model> models,
			Set<ExecutiveSummery> executiveSummeries, Set<Category> categories,
			Set<Hardware> hardwares) {
		this.heading = heading;
		this.filePath = filePath;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.isActive = isActive;
		this.models = models;
		this.executiveSummeries = executiveSummeries;
		this.categories = categories;
		this.hardwares = hardwares;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "heading")
	public String getHeading() {
		return this.heading;
	}

	public void setHeading(String heading) {
		this.heading = heading;
	}

	@Column(name = "filePath")
	public String getFilePath() {
		return this.filePath;
	}

	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedOn", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "isActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staticText")
	public Set<Model> getModels() {
		return this.models;
	}

	public void setModels(Set<Model> models) {
		this.models = models;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staticText")
	public Set<ExecutiveSummery> getExecutiveSummeries() {
		return this.executiveSummeries;
	}

	public void setExecutiveSummeries(Set<ExecutiveSummery> executiveSummeries) {
		this.executiveSummeries = executiveSummeries;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catagory_has_static_text", catalog = "dbsl_proposal_generator", joinColumns = { @JoinColumn(name = "STATIC_TEXT_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "CATEGORY_id", nullable = false, updatable = false) })
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staticText")
	public Set<Hardware> getHardwares() {
		return this.hardwares;
	}

	public void setHardwares(Set<Hardware> hardwares) {
		this.hardwares = hardwares;
	}

}
