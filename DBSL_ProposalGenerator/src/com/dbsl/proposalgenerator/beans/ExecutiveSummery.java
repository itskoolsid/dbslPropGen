package com.dbsl.proposalgenerator.beans;

// Generated Oct 2, 2015 12:51:43 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ExecutiveSummery generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "executive_summery", catalog = "dbsl_proposal_generator")
public class ExecutiveSummery implements java.io.Serializable {

	private Integer id;
	private StaticText staticText;
	private Solution solution;
	private Date createdOn;
	private Boolean isActive;

	public ExecutiveSummery() {
	}

	public ExecutiveSummery(StaticText staticText, Solution solution) {
		this.staticText = staticText;
		this.solution = solution;
	}

	public ExecutiveSummery(StaticText staticText, Solution solution,
			Date createdOn, Boolean isActive) {
		this.staticText = staticText;
		this.solution = solution;
		this.createdOn = createdOn;
		this.isActive = isActive;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATIC_TEXT_id", nullable = false)
	public StaticText getStaticText() {
		return this.staticText;
	}

	public void setStaticText(StaticText staticText) {
		this.staticText = staticText;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SOLUTION_id", nullable = false)
	public Solution getSolution() {
		return this.solution;
	}

	public void setSolution(Solution solution) {
		this.solution = solution;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdOn", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "isActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

}
